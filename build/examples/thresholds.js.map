{"version":3,"sources":["webpack:///./examples/thresholds.js"],"names":["RangeWithTooltip","createSliderWithTooltip","Range","style","width","margin","thresholdColors","backgroundColor","findThresholdColor","range","value","length","len","i","ReactDOM","render","console","log","document","getElementById"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;;AAEA,IAAMA,mBAAmBC,0EAAuBA,CAACC,gDAAxB,CAAzB;AACA,IAAMC,QAAQ,EAAEC,OAAO,GAAT,EAAcC,QAAQ,EAAtB,EAAd;;AAEO,IAAMC,kBAAkB,CAC7B,EAAEC,iBAAiB,SAAnB,EAD6B,EAE7B,EAAEA,iBAAiB,SAAnB,EAF6B,EAG7B,EAAEA,iBAAiB,SAAnB,EAH6B,EAI7B,EAAEA,iBAAiB,SAAnB,EAJ6B,EAK7B,EAAEA,iBAAiB,SAAnB,EAL6B,CAAxB;;AAQA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,KAAD,EAAQC,KAAR,EAAkB;AAClD,MAAIA,SAAS,CAAb,EAAgB,OAAOJ,gBAAgB,CAAhB,EAAmBC,eAA1B;AAChB,MAAIG,SAAS,GAAb,EAAkB,OAAOJ,gBAAgBA,gBAAgBK,MAAhB,GAAyB,CAAzC,EAA4CJ,eAAnD;;AAElB,MAAMK,MAAMH,MAAME,MAAlB;;AAEA,OAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAID,GAApB,EAAyBC,GAAzB,EAA8B;AAC5B,QAAIH,QAAQD,MAAMI,CAAN,CAAZ,EAAsB;AACpB,aAAOP,gBAAgBO,IAAI,CAApB,EAAuBN,eAA9B;AACD;AACF;AACF,CAXM;;AAaPO,iDAAQA,CAACC,MAAT,CACE;AAAA;AAAA;AACE;AAAA;AAAA,MAAK,OAAOZ,KAAZ;AACE,gEAAC,gBAAD;AACE,oBAAc,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,GAApB,CADhB;AAEE,gBAAU,CAFZ;AAGE,kBAAYG,eAHd;AAIE,aAAO,EAAE,GAAG,IAAL,EAAW,KAAK,MAAhB,EAJT;AAKE,oBAAc,sBAACI,KAAD;AAAA,eAAcA,KAAd;AAAA,OALhB;AAME,qBAAe,yBAAM;AAAEM,gBAAQC,GAAR,CAAY,iBAAZ;AAAgC;AANzD;AADF;AADF,CADF,EAaEC,SAASC,cAAT,CAAwB,iBAAxB,CAbF,E","file":"examples/thresholds.js","sourcesContent":["/* eslint react/no-multi-comp: 0, no-console: 0 */\nimport 'rc-slider/assets/index.less';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Range, createSliderWithTooltip } from 'rc-slider';\n\nconst RangeWithTooltip = createSliderWithTooltip(Range);\nconst style = { width: 400, margin: 50 };\n\nexport const thresholdColors = [\n  { backgroundColor: '#E89EA6' },\n  { backgroundColor: '#E8C3C3' },\n  { backgroundColor: '#C3E8E6' },\n  { backgroundColor: '#A3D8D9' },\n  { backgroundColor: '#88CBD1' },\n];\n\nexport const findThresholdColor = (range, value) => {\n  if (value <= 0) return thresholdColors[0].backgroundColor;\n  if (value >= 100) return thresholdColors[thresholdColors.length - 1].backgroundColor;\n\n  const len = range.length;\n\n  for (let i = 0; i < len; i++) {\n    if (value < range[i]) {\n      return thresholdColors[i - 1].backgroundColor;\n    }\n  }\n}\n\nReactDOM.render(\n  <div>\n    <div style={style}>\n      <RangeWithTooltip\n        defaultValue={[0, 25, 50, 75, 90, 100]}\n        pushable={6}\n        trackStyle={thresholdColors}\n        marks={{ 0: '0%', 100: '100%' }}\n        tipFormatter={(value) => `${value}%`}\n        onAfterChange={() => { console.log('on after change') }}\n      />\n    </div>\n  </div>,\n  document.getElementById('__react-content')\n);\n\n\n\n// WEBPACK FOOTER //\n// ./examples/thresholds.js"],"sourceRoot":""}